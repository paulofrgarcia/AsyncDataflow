\par In light of the popularity of platform FPGAs, hardware-software interactions deserve particular attention. The most basic approach is to manually ''patch" software, replacing function calls with instructions for hardware access (which can be either dedicated instructions, added to a soft processor instruction set, or memory-mapped accesses, depending on how bespoke hardware is connected). More recently, FPGA vendors have partially automated software-hardware interactions (e.g., Xilinx toolchain allows adding AXI-compliant IP blocks to a design and facilitate generating software for interaction, even device drivers for Linux). Projects such as LegUp \cite{canis2011legup}, which (semi)automatically profile a software application running on a soft MIPS processor and generate hardware, at function granularity from C source code, connect hardware accelerators through a dedicated Avalon bus and patch software to access them. Both approaches, followed by many other HLS toolchains, treat software as a first class citizen and hardware as second class; i.e., software controls the execution flow and can utilize hardware accelerators whenever it sees fit, an approach commonly referref to as \textit{vertical integration}. \textit{Data transport layers} enhance the semantics of interoperability by providing bi-directional channels between hardware and software: examples are Xillybus \cite{Xilly}, LEAP \cite{adler2011leap} and RIFFA \cite{jacobsen2015riffa}. Although more powerful and flexible than vertical integration approaches, these technologies still require explicit function linking by the programmer. A more sophisticated technology is PushPush, which exposes component functionality (where a component can be hardware or software) as  strongly  typed functions, and allows any component to access functions exposed by any other in the system \cite{7294024}, allowing hardware blocks to invoke software functionalities seamlessly; linking is performed automatically, either at system integration or runtime, implementing \textit{horizontal integration}.
